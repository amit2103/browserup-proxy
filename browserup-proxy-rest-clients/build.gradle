/*
 * Modifications Copyright (c) 2019 BrowserUp, Inc.
 */

plugins {
    id 'java-library'
    id 'groovy'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.0.8"
    id 'org.openapi.generator' version '4.1.0'
}

resolve {
    outputFileName = 'openapi'
    outputFormat = 'YAML'
    prettyPrint = 'TRUE'
    openApiFile = file("src/main/resources/openapi-config.json")
    classpath = sourceSets.main.runtimeClasspath
    readerClass = "com.browserup.bup.rest.openapi.CustomOpenApiReader"
    resourcePackages = ['com.browserup.bup.rest.resource']
    outputPath = "$buildDir/openapi"
}

def clientLanguages = [
        'JavaScript',
        'Ruby'
        //https://github.com/OpenAPITools/openapi-generator/issues/3285
        //'Python'
]

clientLanguages.each { lang ->
    task "openApiGenerate${lang}Client"(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask) {
        def language = lang.toLowerCase()
        generatorName = language
        inputSpec = "$buildDir/openapi/openapi.yaml".toString()
        outputDir = "$buildDir/openapi-clients/$language/".toString()
        apiPackage = "browserup"
        invokerPackage = "browserup.invoker"
        modelPackage = "browserup.model"
        systemProperties = [
                modelDocs: 'false'
        ]
        skipValidateSpec = true
        logToStderr = true
        generateAliasAsModel = false
    }
}

test {
    testLogging.showStandardStreams = true
}

task openApiGenerateClients(dependsOn: resolve) {
    clientLanguages.each { lang ->
        dependsOn "openApiGenerate${lang}Client"
    }

    doLast {
        clientLanguages.each { lang ->
            def langName = lang.toLowerCase()
            delete "src/test/${langName}/client"
            copy {
                from "$buildDir/openapi-clients/${langName}/"
                into "src/test/${langName}/client"
            }
        }

        project.delete "$buildDir/openapi-clients"
    }
}

archivesBaseName = 'browserup-proxy-rest-clients'

dependencies {
    implementation project(':browserup-proxy-core')
    implementation project(':browserup-proxy-rest')

    testImplementation project(':browserup-proxy-mitm')

    testImplementation "com.google.inject:guice:$guiceVersion"
    testImplementation "com.google.inject.extensions:guice-servlet:$guiceVersion"
    testImplementation "com.google.inject.extensions:guice-multibindings:$guiceVersion"

    testImplementation 'com.google.sitebricks:sitebricks:0.8.11'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.7'
    testImplementation 'org.codehaus.groovy.modules.http-builder:http-builder:0.7.2'
    testImplementation 'org.hamcrest:hamcrest:2.1'
    testImplementation 'org.hamcrest:hamcrest-library:2.1'
    testImplementation 'org.mockito:mockito-core:3.0.0'
    testImplementation 'org.seleniumhq.selenium:selenium-api:3.4.0'
    testImplementation 'org.awaitility:awaitility:3.1.6'
    testImplementation 'xyz.rogfam:littleproxy:2.0.0-beta-3'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.24.0'
    testImplementation 'org.testcontainers:testcontainers:1.12.0'
}

openApiGenerateClients.mustRunAfter(resolve)

test.dependsOn(openApiGenerateClients)
